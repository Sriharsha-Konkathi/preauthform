{"version":3,"sources":["Forms/PreAuthForm.js","App.js","serviceWorker.js","index.js"],"names":["FormikApp","withFormik","mapPropsToValues","_ref2","email","password","newsletter","plan","patientname","doctor","sex","age","contact","insuranceid","insurer","insuranceplan","treatment","hospital","address","zipcode","city","state","validationSchema","Yup","required","min","handleSubmit","values","_ref3","resetForm","setErrors","setSubmitting","setTimeout","console","log","_ref","errors","touched","isSubmitting","react_default","a","createElement","className","formik_esm","type","name","placeholder","component","value","phone","pattern","disabled","App","Forms_PreAuthForm","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.93cf8e82.chunk.js","sourcesContent":["import React from 'react';\r\nimport { withFormik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport './PreAuthForm.css';\r\n\r\n// import selectvalues from './selectoptions';\r\n\r\nconst App = ({ values, errors, touched, isSubmitting }) => (\r\n\r\n    <div className=\"body\">\r\n        <center>\r\n            <h1>Pre Authorization Form</h1>\r\n            <h3 className=\"subtitle\">Patient Information</h3>\r\n            <Form>\r\n                {/* <div>\r\n        {touched.email && errors.email && <p>{errors.email}</p>}\r\n        <label>Email:  \r\n        <Field type=\"email\" name=\"email\" placeholder=\"Email\" />       \r\n        </label>\r\n      </div>\r\n      <div>\r\n        {touched.password && errors.password && <p>{errors.password}</p>}\r\n        <label>Password\r\n        <Field type=\"password\" name=\"password\" placeholder=\"Password\" /></label>\r\n      </div> */}\r\n                {/* <label>\r\n        <Field type=\"checkbox\" name=\"newsletter\" checked={values.newsletter} />\r\n        Join our newsletter\r\n      </label> \r\n      <Field component=\"select\" name=\"plan\">\r\n        <option value=\"free\">Free</option>\r\n        <option value=\"premium\">Premium</option>\r\n      </Field>*/}\r\n                {/* <div>\r\n                    {touched.patientname && errors.patientname && <p>{errors.patientname}</p>}\r\n                    <label>Patient Full Name:\r\n                    <Field type=\"text\" name=\"patientname\" placeholder=\"Full Name\" /></label>\r\n                </div> */}\r\n                <div className=\"form-group\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <label>First Name:\r\n                            <Field type=\"text\" name=\"firstname\" placeholder=\"First Name\" /></label>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <label>Last Name:\r\n                            <Field type=\"text\" name=\"lastname\" placeholder=\"Last Name\" /></label>\r\n                        </div>\r\n                    </div>                    \r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <label> Sex:\r\n                            <Field component=\"select\" name=\"sex\">\r\n                            <option value=\"male\">Male</option>\r\n                            <option value=\"female\">Female</option>\r\n                            <option value=\"others\">Others</option>\r\n                            </Field></label>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                                {touched.phone && errors.phone && <p>{errors.phone}</p>}\r\n                                <label>Contact Number :\r\n                                <Field type=\"tel\" name=\"contact\" placeholder=\"Mobile Number\" pattern=\"[0-9]{3}[0-9]{3}[0-9]{4}\" /></label>\r\n                        </div>    \r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            {touched.age && errors.age && <p>{errors.age}</p>}\r\n                            <label>Age :\r\n                            <Field type=\"number\" name=\"age\" placeholder=\"Age\" /></label>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <label>Address:\r\n                            <Field type=\"text\" name=\"paddress\" placeholder=\"Address\" /></label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <h3 className=\"subtitle\">Insurance Information</h3>\r\n                <div className=\"form-group\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <label> Insurance Provider:\r\n                            <Field component=\"select\" name=\"insurer\">\r\n                            <option value=\"insurer1\">Anthem</option>\r\n                            <option value=\"insurer2\">Blue Cross</option>\r\n                            <option value=\"insurer3\">Blue Shield</option>\r\n                            </Field></label>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            {touched.insuranceid && errors.insuranceid && <p>{errors.insuranceid}</p>}\r\n                            <label>Patient's Insurance ID:\r\n                            <Field type=\"text\" name=\"insuranceid\" placeholder=\"Insurance ID Number\" /></label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <h3 className=\"subtitle\">Provider Information</h3>\r\n                \r\n                <div className=\"form-group\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <label> Hospital Name:\r\n                            <Field component=\"select\" name=\"hospital\" disabled>\r\n                            <option value=\"hospital1\">Hospital 1</option>\r\n                            <option value=\"hospital2\">Hospital 2</option>\r\n                            <option value=\"hospital3\">Hospital 3</option>\r\n                            </Field></label>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <label> Doctor Name:\r\n                            <Field component=\"select\" name=\"doctor\">\r\n                            <option value=\"doctor1\">Doctor 1</option>\r\n                            <option value=\"doctor2\">Doctor 2</option>\r\n                            <option value=\"doctor3\">Doctor 3</option>\r\n                            </Field></label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <center>\r\n                <div className=\"form-group\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-*\">\r\n                        <label>Address:\r\n                        <Field type=\"text\" name=\"address\" placeholder=\"Address\" disabled /></label>\r\n                        </div>\r\n                        <div className=\"col-md-*\">\r\n                        <label>City:\r\n                        <Field type=\"text\" name=\"city\" placeholder=\"City\" disabled /></label>\r\n                        </div>\r\n                        <div className=\"col-md-*\">\r\n                        <label>State:\r\n                        <Field type=\"text\" name=\"state\" placeholder=\"State\" disabled /></label>\r\n                        </div>\r\n                        <div className=\"col-md-*\">\r\n                        <label>Zip Code:\r\n                        <Field type=\"number\" name=\"zipcode\" placeholder=\"Zip Code\" disabled /></label>  \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </center>\r\n                <div className=\"form-group\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <label> Treatment Requested:\r\n                            <Field component=\"select\" name=\"treatment\">\r\n                            <option value=\"treatment1\">Treatment 1</option>\r\n                            <option value=\"treatment2\">Treatment 2</option>\r\n                            <option value=\"treatment3\">Treatment 3</option>\r\n                            </Field></label>\r\n                        </div>\r\n                        <div className=\"col-md-6 date\">\r\n                        <label> Date of Admission:\r\n                            <Field type=\"date\" name=\"date\">\r\n                            </Field>\r\n                        </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                          \r\n                \r\n\r\n                {/* <label> Insurance Plan: \r\n      <Field component=\"select\" name=\"insuranceplan\">\r\n        <option value=\"insuranceplan1\">InsurancePlan 1</option>\r\n        <option value=\"insuranceplan2\">InsurancePlan 2</option>\r\n        <option value=\"insuranceplan3\">InsurancePlan 3</option>\r\n      </Field></label> */}\r\n\r\n                {/* <label> Insurance Plan:\r\n      <Field component=\"select\" name=\"insuranceplan\">\r\n                        <option value=\"insuranceplan1\">InsurancePlan 1</option>\r\n                        <option value=\"insuranceplan2\">InsurancePlan 2</option>\r\n                        <option value=\"insuranceplan3\">InsurancePlan 3</option>\r\n                    </Field></label> */}\r\n\r\n            \r\n\r\n\r\n\r\n                <button type=\"submit\" disabled={isSubmitting}>\r\n                    Submit\r\n      </button>\r\n\r\n            </Form>\r\n        </center>\r\n    </div>\r\n);\r\n\r\nconst FormikApp = withFormik({\r\n    mapPropsToValues({ email, password, newsletter, plan, patientname, doctor, sex, age, contact, insuranceid, insurer, insuranceplan, treatment, hospital, address, zipcode, city, state }) {\r\n        return {\r\n            email: email || \"\",\r\n            password: password || \"\",\r\n            newsletter: newsletter || false,\r\n            plan: plan || \"free\",\r\n            patientname: patientname || \"\",\r\n            doctor: doctor || \"doctor1\",\r\n            sex: sex || \"male\",\r\n            age: age || 1,\r\n            contact: contact,\r\n            insuranceid: insuranceid,\r\n            insurer: insurer || \"insurer1\",\r\n            insuranceplan: insuranceplan || \"insuranceplan3\",\r\n            treatment: treatment || \"treatment2\",\r\n            hospital: hospital,\r\n            address: address,\r\n            zipcode: zipcode,\r\n            city: city,\r\n            state: state\r\n\r\n\r\n\r\n\r\n        };\r\n    },\r\n    validationSchema: Yup.object({\r\n        email: Yup.string()\r\n            .email()\r\n            .required(),\r\n        password: Yup.string()\r\n            .min(4)\r\n            .required(),\r\n        patientname: Yup.string()\r\n            .min(3)\r\n            .required(),\r\n        age: Yup.number().min(1).required(),\r\n        contact: Yup.number(),\r\n        insuranceid: Yup.string().min(6).required()\r\n\r\n    }),\r\n    handleSubmit(values, { resetForm, setErrors, setSubmitting }) {\r\n        setTimeout(() => {\r\n            if (values.email === \"s@gmail.com\") {\r\n                setErrors({ email: \"This email is already taken\" });\r\n            } else {\r\n                resetForm();\r\n            }\r\n            setSubmitting(false);\r\n        }, 2000);\r\n        console.log(values);\r\n    }\r\n})(App);\r\n\r\n\r\nexport default FormikApp;\r\n\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport FormikApp from './Forms/PreAuthForm';\n\nclass App extends Component {\n  render() {\n    return (\n      // <FormikApp email=\"raju@gmail.com\" patientname=\"Raju Bhai\"/>\n      <div className=\"container\">\n      <FormikApp hospital=\"hospital2\" address=\"Bellandur\" zipcode='506103' city=\"Bangalore\" state=\"Karnataka\" />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}